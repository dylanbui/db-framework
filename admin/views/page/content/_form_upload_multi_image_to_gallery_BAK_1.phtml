
<script src="<?php echo __JS_URL; ?>dropzone.js"></script>
<!-- CSS to style the file input field as button and adjust the Bootstrap progress bars -->


<div class="control-group">
    <label class="control-label text-info">Upload nhieu thu</label>
    <div id="zone-multi-upload" class="dropzone controls">

        <!-- The fileupload-buttonbar contains buttons to add/delete files and start/cancel the upload -->


        <div id="actions" class="row-fluid">


                <!-- The fileinput-button span is used to style the file input field as button -->
        <span class="btn btn-success fileinput-button">
            <i class="glyphicon glyphicon-plus"></i>
            <span>Add files...</span>
        </span>



<!--            <div class="col-lg-5">-->
<!---->
<!--                <span class="fileupload-process">-->
<!--                  <div id="total-progress" class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0">-->
<!--                      <div class="progress-bar progress-bar-success" style="width:0%;" data-dz-uploadprogress></div>-->
<!--                  </div>-->
<!--                </span>-->
<!--            </div>-->


        </div>

<!--        <span class='help-inline'>Drop files here to upload</span>-->






        <!-- HTML heavily inspired by http://blueimp.github.io/jQuery-File-Upload/ -->
        <div class="row-fluid table table-striped files" id="previews">

            <div id="template" class="row-fluid file-row">
                <!-- This is used as the file preview template -->
                <div class="span2">
                    <span class="preview"><img data-dz-thumbnail /></span>
                </div>
                <div class="span4">
                    <p class="name" data-dz-name></p>
                    <strong class="error text-danger" data-dz-errormessage></strong>
                </div>
                <div class="span2">
                    <p class="size" data-dz-size></p>
<!--                    <div class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0">-->
<!--                        <div class="progress-bar progress-bar-success" style="width:0%;" data-dz-uploadprogress></div>-->
<!--                    </div>-->
                </div>
                <div class="span4">
<!--                    <button class="btn btn-primary start">-->
<!--                        <i class="glyphicon glyphicon-upload"></i>-->
<!--                        <span>Start</span>-->
<!--                    </button>-->
                    <button data-dz-remove class="btn btn-warning cancel">
                        <i class="glyphicon glyphicon-ban-circle"></i>
                        <span>Cancel</span>
                    </button>
<!--                    <button data-dz-remove class="btn btn-danger delete">-->
<!--                        <i class="glyphicon glyphicon-trash"></i>-->
<!--                        <span>Delete</span>-->
<!--                    </button>-->
                </div>
            </div>

        </div>






    </div>
</div>

<script language="JavaScript">


//    // Get the template HTML and remove it from the doumenthe template HTML and remove it from the doument
//    var previewNode = document.querySelector("#template");
//    previewNode.id = "";
//    var previewTemplate = previewNode.parentNode.innerHTML;
//    previewNode.parentNode.removeChild(previewNode);
//
//    var myDropzone = new Dropzone(document.body, { // Make the whole body a dropzone
//        url: "/target-url", // Set the url
//        thumbnailWidth: 100,
//        thumbnailHeight: 100,
//        parallelUploads: 20,
//        maxFiles: 20,
//        previewTemplate: previewTemplate,
//        autoQueue: false, // Make sure the files aren't queued until manually added
//        previewsContainer: "#previews", // Define the container to display the previews
//        clickable: ".fileinput-button", // Define the element that should be used as click trigger to select files.
//        paramName: "image_gallery_new",
//        uploadMultiple: true,
//        autoProcessQueue: false
//    });
//
//    myDropzone.on("addedfile", function(file) {
//        // Hookup the start button
////        file.previewElement.querySelector(".start").onclick = function() { myDropzone.enqueueFile(file); };
//    });
//
//    // Update the total progress bar
//    myDropzone.on("totaluploadprogress", function(progress) {
////        document.querySelector("#total-progress .progress-bar").style.width = progress + "%";
//    });
//
//    myDropzone.on("sending", function(file) {
//        // Show the total progress bar when upload starts
////        document.querySelector("#total-progress").style.opacity = "1";
//        // And disable the start button
////        file.previewElement.querySelector(".start").setAttribute("disabled", "disabled");
//    });
//
//    // Hide the total progress bar when nothing's uploading anymore
//    myDropzone.on("queuecomplete", function(progress) {
////        document.querySelector("#total-progress").style.opacity = "0";
//    });
//
//    // First change the button to actually tell Dropzone to process the queue.
//    document.querySelector("button[type=submit]").addEventListener("click", function(e) {
//        // Make sure that the form isn't actually being sent.
//        e.preventDefault();
//        e.stopPropagation();
//        myDropzone.processQueue();
//    });


    // Setup the buttons for all transfers
    // The "add files" button doesn't need to be setup because the config
    // `clickable` has already been specified.
//    document.querySelector("#actions .start").onclick = function() {
//        myDropzone.enqueueFiles(myDropzone.getFilesWithStatus(Dropzone.ADDED));
//    };
//    document.querySelector("#actions .cancel").onclick = function() {
//        myDropzone.removeAllFiles(true);
//    };







//        // Get the template HTML and remove it from the doumenthe template HTML and remove it from the doument
//        var previewNode = document.querySelector("#template");
//        previewNode.id = "";
//        var previewTemplate = previewNode.parentNode.innerHTML;
//        previewNode.parentNode.removeChild(previewNode);
//
////        var myDropzone = new Dropzone(document.body, { // Make the whole body a dropzone
////        var myDropzone = new Dropzone(document.querySelector('#zone-multi-upload'), { // Make the whole body a dropzone
//        var myDropzone = new Dropzone('div#zone-multi-upload', { // Make the whole body a dropzone
//            url: "/target-url", // Set the url
//            thumbnailWidth: 100,
//            thumbnailHeight: 100,
//            parallelUploads: 20,
//            maxFiles: 20,
//            previewTemplate: previewTemplate,
//            autoQueue: false, // Make sure the files aren't queued until manually added
//            previewsContainer: "#previews", // Define the container to display the previews
//            clickable: ".fileinput-button", // Define the element that should be used as click trigger to select files.
//            paramName: "image_gallery_new",
//            uploadMultiple: true,
//            autoProcessQueue: false
//        });
//
//        // First change the button to actually tell Dropzone to process the queue.
//        document.querySelector("button[type=submit]").addEventListener("click", function(e) {
//            // Make sure that the form isn't actually being sent.
//            console.log('vao day chua');
//            e.preventDefault();
////            e.stopPropagation();
////            myDropzone.processQueue();
//        });

var previewNode = document.querySelector("#template");
previewNode.id = "";
var previewTemplate = previewNode.parentNode.innerHTML;
previewNode.parentNode.removeChild(previewNode);

        Dropzone.options.zoneMultiUpload = { // The camelized version of the ID of the form element

            url: $('#validation-form').attr('action'),

            // The configuration we've talked about above
//            autoProcessQueue: false,
//            uploadMultiple: true,
//            parallelUploads: 100,
//            maxFiles: 100,
//
//            autoDiscover: false,
//
//            thumbnailWidth: 100,
//            thumbnailHeight: 100,
//
//            previewTemplate: previewTemplate,
//            autoQueue: false, // Make sure the files aren't queued until manually added
//            previewsContainer: "#previews", // Define the container to display the previews
//            clickable: ".fileinput-button", // Define the element that should be used as click trigger to select files.
//            paramName: "image_gallery_new[]",


            autoProcessQueue: false,
            uploadMultiple: true,
            parallelUploads: 100,
            maxFiles: 100,


            // The setting up of the dropzone
            init: function() {

//                this.options.url = "/target-url";

                console.log('show oooo');
                console.log($('#validation-form').attr('action'));

                var myDropzone = this;

//                this.on("addfile", function(file) {
//                    // Gets triggered when the form is actually being sent.
//                    // Hide the success button or the complete form.
//                    console.log(file);
//                });


                // Listen to the sendingmultiple event. In this case, it's the sendingmultiple event instead
                // of the sending event because uploadMultiple is set to true.
                this.on("sendingmultiple", function() {
                    // Gets triggered when the form is actually being sent.
                    // Hide the success button or the complete form.
                });
                this.on("successmultiple", function(files, response) {
                    // Gets triggered when the files have successfully been sent.
                    // Redirect user or notify of success.
                });
                this.on("errormultiple", function(files, response) {
                    // Gets triggered when there was an error sending the files.
                    // Maybe show form again, and notify user of error
                });
            }

        }

document.querySelector("button[type=submit]").addEventListener("click", function(e) {
    // Make sure that the form isn't actually being sent.
    console.log('show hang');
//                    e.preventDefault();

//                    e.stopPropagation();
//                    myDropzone.processQueue();
});





</script>

